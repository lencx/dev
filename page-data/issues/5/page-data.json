{"componentChunkName":"component---src-templates-issues-tsx","path":"/issues/5","result":{"data":{"site":{"siteMetadata":{"repo":"https://github.com/lencx/dev"}},"issuesJson":{"id":"295bad7e-46b6-5098-a3a3-62ed66a6aa01","title":"Web 缓存","number":5,"bodyHTML":"<p dir=\"auto\">Web 缓存（HTTP 缓存）是用于临时存储 Web 文档，以减少服务器延迟的一种信息技术。</p>\n<h3 dir=\"auto\">缓存控制</h3>\n<p dir=\"auto\">HTTP 定义了三种控制缓存的基本机制：</p>\n<ol dir=\"auto\">\n<li><strong>新鲜度</strong>：允许不在源服务器上重新检查的情况下使用一个响应，并且可以由服务器和客户端来控制\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">Expires</code> 响应头给出文档失效时间</li>\n<li><code class=\"notranslate\">Cache-Control: max-age</code> 指示告诉缓存该响应在多少秒内保持新鲜度</li>\n</ul>\n</li>\n<li><strong>验证</strong>：检查缓存的响应过期后是否仍然有效\n<ul dir=\"auto\">\n<li>若响应有 <code class=\"notranslate\">Last-Modified</code> 头，缓存可以使用 <code class=\"notranslate\">If-Modified-Since</code> 头来发出一个请求，来查看它是否已经改变</li>\n<li><code class=\"notranslate\">ETag</code>（实体标签）机制还允许强弱验证</li>\n</ul>\n</li>\n<li><strong>失效</strong>：通常是另一个请求通过缓存的一个结果\n<ul dir=\"auto\">\n<li>如果与缓存的响应关联的 URL 随后获得 POST、PUT 或 DELETE 请求，则缓存的响应将失效</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2 dir=\"auto\">参考资料</h2>\n<ul dir=\"auto\">\n<li><a href=\"https://developers.google.com/web/fundamentals/performance/get-started/httpcaching-6\" rel=\"nofollow\">HTTP Caching</a></li>\n<li><a href=\"https://calendar.perfplanet.com/2016/a-tale-of-four-caches/\" rel=\"nofollow\">A Tale of Four Caches</a></li>\n<li><a href=\"https://medium.com/@codebyamir/a-web-developers-guide-to-browser-caching-cc41f3b73e7c\" rel=\"nofollow\">A Web Developer’s Guide to Browser Caching</a></li>\n</ul>","updatedAt":"2022-03-21T06:37:50Z","upvoteCount":1,"author":{"login":"lencx","avatarUrl":"https://avatars.githubusercontent.com/u/16164244?u=77d1d01930d8e36105a49a6c474abf70eeee74b1&v=4","url":"https://github.com/lencx"},"category":{"isAnswerable":false,"name":"Web","emoji":":globe_with_meridians:"},"labels":{"edges":[{"node":{"name":"Blog","color":"222222"}}]},"comments":{"edges":[]}}},"pageContext":{"number":5,"previous":{"title":"并发控制","number":16},"next":{"title":"父容器高度不固定，内部元素怎样才可以滚动？","number":15}}},"staticQueryHashes":["3993188973"]}