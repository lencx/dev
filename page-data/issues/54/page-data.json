{"componentChunkName":"component---src-templates-issues-tsx","path":"/issues/54","result":{"data":{"site":{"siteMetadata":{"repo":"https://github.com/lencx/dev"}},"issuesJson":{"id":"9f70ff9e-de36-51bf-b862-12fc0318f006","title":"js 继承与原型链","number":54,"bodyHTML":"<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"/**\n* 1. new foo() // 输出什么\n* 2. foo() // 输出什么\n* 3. f.b // 输出什么，为什么（this.b 和 foo.prototype.b 的区别）\n* 4. foo.c 和 foo.d 有什么区别？\n* 5. foo.prototype = { e: 5, f: 6 } 写法有什么问题？\n* 6. new 关键字做了哪些事情？\n* 7. f.e // 输出什么，为什么（查找路径是什么）\n**/\n\nlet foo = function() {\n  this.a = 1;\n  this.b = 2;\n}\n\nconst f = new foo();\n\nfoo.prototype.b = -2;\nfoo.prototype.c = 3;\nfoo.d = 4;\"><pre><span class=\"pl-c\">/**</span>\n<span class=\"pl-c\">* 1. new foo() // 输出什么</span>\n<span class=\"pl-c\">* 2. foo() // 输出什么</span>\n<span class=\"pl-c\">* 3. f.b // 输出什么，为什么（this.b 和 foo.prototype.b 的区别）</span>\n<span class=\"pl-c\">* 4. foo.c 和 foo.d 有什么区别？</span>\n<span class=\"pl-c\">* 5. foo.prototype = { e: 5, f: 6 } 写法有什么问题？</span>\n<span class=\"pl-c\">* 6. new 关键字做了哪些事情？</span>\n<span class=\"pl-c\">* 7. f.e // 输出什么，为什么（查找路径是什么）</span>\n<span class=\"pl-c\">**/</span>\n\n<span class=\"pl-k\">let</span> <span class=\"pl-en\">foo</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">a</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">b</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">f</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">foo</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">foo</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">prototype</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">b</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">-</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-en\">foo</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">prototype</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">c</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-en\">foo</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">d</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">4</span><span class=\"pl-kos\">;</span></pre></div>\n<hr>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// Bar 如何继承 Foo\nfunction Foo() {\n  this.name = &quot;lencx&quot;;\n  this.age = 20;\n}\nfunction Bar() {\n  // TODO\n}\"><pre><span class=\"pl-c\">// Bar 如何继承 Foo</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-v\">Foo</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">\"lencx\"</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">age</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">20</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-v\">Bar</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">// TODO</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"function Bar() {\n  Foo.call(this);\n}\n// 添加原型实例（Foo.prototype）作为构造器函数 prototype 属性的值\nBar.prototype = Object.create(Foo.prototype);\"><pre><span class=\"pl-k\">function</span> <span class=\"pl-v\">Bar</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-v\">Foo</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">call</span><span class=\"pl-kos\">(</span><span class=\"pl-smi\">this</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-c\">// 添加原型实例（Foo.prototype）作为构造器函数 prototype 属性的值</span>\n<span class=\"pl-v\">Bar</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">prototype</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Object</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">create</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Foo</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">prototype</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>","updatedAt":"2022-06-28T08:43:30Z","upvoteCount":1,"author":{"login":"lencx","avatarUrl":"https://avatars.githubusercontent.com/u/16164244?u=77d1d01930d8e36105a49a6c474abf70eeee74b1&v=4","url":"https://github.com/lencx"},"category":{"isAnswerable":false,"name":"Web","emoji":":globe_with_meridians:"},"labels":{"edges":[]},"comments":{"edges":[]}}},"pageContext":{"number":54,"previous":{"title":"Rust国内镜像","number":51},"next":{"title":"Awesome Web","number":53}}},"staticQueryHashes":["3993188973"]}