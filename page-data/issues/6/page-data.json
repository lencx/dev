{"componentChunkName":"component---src-templates-issues-tsx","path":"/issues/6","result":{"data":{"site":{"siteMetadata":{"repo":"https://github.com/lencx/dev"}},"issuesJson":{"id":"c292149c-276b-5016-8d79-9ed7c81ca3a3","title":"TCP 与 UDP 之间的区别","number":6,"bodyHTML":"<blockquote>\n<p dir=\"auto\">数据能否快速完整地传输取决于你使用的网络协议，是 UDP 还是 TCP。它们都做同样的工作，但方式不同。TCP 更可靠，UDP 更快。</p>\n</blockquote>\n<h2 dir=\"auto\">举例</h2>\n<h3 dir=\"auto\">例一</h3>\n<p dir=\"auto\">在 A，B 两地之间存在一条河，现在需要将信件从 A 地送达 B 地，应该如何发送信件？</p>\n<ul dir=\"auto\">\n<li><strong>在河上建一座桥，然后将信件送达</strong> - TCP，必须建立连接（桥接）才能传递数据（信件），数据是可靠的，因为它将直接到达另一端而不会丢失数据或错误。</li>\n<li><strong>通过鸽子送达</strong> - UDP，发送数据不需要连接，与 TCP 相比，这个过程更快。但是数据并不可靠。我们不知道鸽子是否会朝着正确的方向飞行，途中掉信，或者遇到其他一些问题。</li>\n</ul>\n<h3 dir=\"auto\">例二</h3>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/16164244/154880460-af61b88b-1828-4b90-996e-8da8cb822537.png\"><img width=\"400\" alt=\"TCP vs UDP\" src=\"https://user-images.githubusercontent.com/16164244/154880460-af61b88b-1828-4b90-996e-8da8cb822537.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">来自于 <a href=\"https://www.reddit.com/r/ProgrammerHumor/comments/9gcwgw/comment/e63axmd/?utm_source=share&amp;utm_medium=web2x&amp;context=3\" rel=\"nofollow\">noruthwhatsoever</a> 的回答：</p>\n<ul dir=\"auto\">\n<li>如果 TCP 瓶子由其他人拿着并且他们要求从中喝水，这将更加准确。 对话会是这样的：\n<ul dir=\"auto\">\n<li>“喂，我想喝点水。”</li>\n<li>“好，你想喝点水。”</li>\n<li>“是的，我想喝点水。”</li>\n<li>“好，你准备好喝水了吗？”</li>\n<li>“是的，我准备喝点水。”</li>\n<li>“好，我给你倒水。”</li>\n<li>“好，我准备好接水了。”</li>\n<li>“好，这里有水。 喝水了吗？”</li>\n<li>“是的，我有水。”</li>\n<li>“好吧，你拿到水了。 再见”</li>\n</ul>\n</li>\n<li>UDP 只是一个拿着软管试图向你张开的嘴里喷水的人</li>\n</ul>\n<h2 dir=\"auto\">基础知识</h2>\n<h3 dir=\"auto\">名词解释</h3>\n<ul dir=\"auto\">\n<li><strong>IPS</strong> - 互联网协议套件（Internet Protocol Suite）是网络通讯模型，以及整个网络传输协议家族，为网际网络的基础通讯架构。它常通称为 TCP/IP 协议族（TCP/IP Protocol Suite，或TCP/IP Protocols），简称 TCP/IP。因为该协定家族的两个核心协定：TCP（传输控制协议）和 IP（网际协议），为该家族中最早通过的标准。由于在网络通讯协议普遍采用分层的结构，当多个层次的协议共同工作时，类似计算机科学中的堆栈，因此又称为 TCP/IP 协议栈（TCP/IP Protocol Stack）。</li>\n<li><strong>TCP</strong> -  传输控制协议（Transmission Control Protocol）是一种面向连接的、可靠的、基于<a href=\"https://zh.wikipedia.org/wiki/%E5%AD%97%E7%AF%80%E6%B5%81\" rel=\"nofollow\">字节流</a>的<a href=\"https://zh.wikipedia.org/wiki/%E4%BC%A0%E8%BE%93%E5%B1%82\" rel=\"nofollow\">传输层</a>通信协议，由 <a href=\"https://zh.wikipedia.org/wiki/IETF\" rel=\"nofollow\">IETF</a> 的 <a href=\"https://zh.wikipedia.org/wiki/RFC\" rel=\"nofollow\">RFC</a> <a href=\"https://tools.ietf.org/html/rfc793\" rel=\"nofollow\">793</a> 定义。在简化的计算机网络 <a href=\"https://zh.wikipedia.org/wiki/OSI%E6%A8%A1%E5%9E%8B\" rel=\"nofollow\">OSI 模型</a>中，它完成第四层传输层所指定的功能。<a href=\"https://zh.wikipedia.org/wiki/%E7%94%A8%E6%88%B7%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%8D%8F%E8%AE%AE\" rel=\"nofollow\">用户数据报协议</a>（UDP）是同一层内另一个重要的传输协议。</li>\n<li><strong>UDP</strong> - 用户资料包协议（User Datagram Protocol）是一个简单的面向资料包的<a href=\"https://zh.wikipedia.org/wiki/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE\" rel=\"nofollow\">通信协议</a>，位于 <a href=\"https://zh.wikipedia.org/wiki/OSI%E6%A8%A1%E5%9E%8B\" rel=\"nofollow\">OSI 模型</a>的<a href=\"https://zh.wikipedia.org/wiki/%E4%BC%A0%E8%BE%93%E5%B1%82\" rel=\"nofollow\">传输层</a>。该协议由 <a href=\"https://zh.wikipedia.org/w/index.php?title=David_P._Reed&amp;action=edit&amp;redlink=1\" rel=\"nofollow\">David P. Reed</a> 在 1980 年设计且在 <a href=\"https://tools.ietf.org/html/rfc768\" rel=\"nofollow\">RFC 768</a> 中被规范。典型网络上的众多使用 UDP 协议的关键应用在一定程度上是相似的。</li>\n<li><strong>OSI 模型</strong> - 开放式系统互联模型（Open System Interconnection Model）是一种概念模型，由<a href=\"https://zh.wikipedia.org/wiki/%E5%9B%BD%E9%99%85%E6%A0%87%E5%87%86%E5%8C%96%E7%BB%84%E7%BB%87\" rel=\"nofollow\">国际标准化组织</a>提出，一个试图使各种计算机在世界范围内互连为网络的标准框架。定义于 ISO/IEC 7498-1。该模型将通信系统中的数据流划分为七个层，从分布式应用程序数据的最高层表示到跨通信介质传输数据的物理实现。每个中间层为其上一层提供功能，其自身功能则由其下一层提供。功能的类别通过标准的通信协议在软件中实现。\n<ul dir=\"auto\">\n<li>「七」 <strong>应用层（Application Layer）</strong> - 提供为应用软件而设计的接口，以设定与另一应用软件之间的通讯。例如：HTTP、HTTPS、FTP、Telnet、SSH、SMTP、POP3 等。</li>\n<li>「六」 <strong>表示层（Presentation Layer）</strong> - 把数据转换为能与接收者的系统格式兼容并适合传输的格式。</li>\n<li>「五」 <strong>会话层（Session Layer）</strong> - 负责在数据传输中设定和维护计算机网络中两台计算机之间的通讯连接。</li>\n<li>「四」 <strong>传输层（Transport Layer）</strong> - 把传输表头（TH）加至资料以形成封包。传输表头包含了所使用的协定等传送资讯。例如：传输控制协议（TCP）等。</li>\n<li>「三」 <strong>网络层（Network Layer）</strong> - 决定数据的路径选择和转寄，将网络表头（NH）加至数据包，以形成封包。网络表头包含了网络资料。例如：互联网协议（IP）等。</li>\n<li>「二」 <strong>数据链路层（Data Link Layer）</strong> - 负责网络寻址、错误侦测和改错。当表头和表尾被加至数据包时，会形成资讯框（Data Frame）。数据链表头（DLH）是包含了实体位址和错误侦测及改错的方法。数据链表尾（DLT）是一串指示数据包末端的字符串。例如乙太网、无线局域网（Wi-Fi）和通用分组无线服务（GPRS）等。分为两个子层：逻辑链路控制（logical link control，LLC）子层和介质访问控制（Media access control，MAC）子层。</li>\n<li>「一」<strong>物理层（Physical Layer）</strong> - 在区域网络上传送数据帧（Data Frame），它负责管理电脑通讯设备和网络媒体之间的互通。包括了针脚、电压、线缆规范、集线器、中继器、网卡、主机介面卡等。</li>\n</ul>\n</li>\n</ul>\n<h3 dir=\"auto\">TCP / UDP</h3>\n<table role=\"table\">\n<thead>\n<tr>\n<th>特征 (Feature)</th>\n<th>传输控制协议 (TCP)</th>\n<th>用户数据报协议 (UDP)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>服务类型 (Type of Service)</td>\n<td>面向连接的协议：通信设备在传输数据之前应该建立连接，在传输数据之后应该关闭连接</td>\n<td>面向数据报的协议：打开连接、维护连接和终止连接没有开销，对于广播和多播类型的网络传输非常有效</td>\n</tr>\n<tr>\n<td>可靠性 (Reliability)</td>\n<td>可靠：保证将数据传送到目标路由器</td>\n<td>不可靠：无法保证将数据传送到目的地</td>\n</tr>\n<tr>\n<td>顺序 (Sequence)</td>\n<td>数据包按顺序到达接收器</td>\n<td>没有数据排序，如果需要排序，则必须由应用层处理</td>\n</tr>\n<tr>\n<td>错误检查 (Error checking mechanism)</td>\n<td>广泛的错误检查机制，因为它提供了数据流控制和确认</td>\n<td>使用校验和的基本错误检查机制</td>\n</tr>\n<tr>\n<td>重传 (Retransmission)</td>\n<td>可以重传丢失的数据包</td>\n<td>不重传丢失的数据包</td>\n</tr>\n<tr>\n<td>流类型 (Stream Type)</td>\n<td>字节流</td>\n<td>消息流</td>\n</tr>\n<tr>\n<td>速度 (Speed)</td>\n<td>比 UDP 慢</td>\n<td>比 TCP 更快、更简单、更高效</td>\n</tr>\n<tr>\n<td>首部长度 (Header Length)</td>\n<td>20-60 字节的可变长度</td>\n<td>8 字节的固定长度</td>\n</tr>\n<tr>\n<td>握手技巧 (Handshaking Techniques)</td>\n<td>使用 SYN、ACK、SYN-ACK 等握手</td>\n<td>无连接协议，即没有握手</td>\n</tr>\n<tr>\n<td>致谢 (Acknowledgment)</td>\n<td>存在确认段</td>\n<td>没有确认段</td>\n</tr>\n<tr>\n<td>重量 (Weight)</td>\n<td>重量级</td>\n<td>轻量级</td>\n</tr>\n<tr>\n<td>广播 (Broadcasting)</td>\n<td>不支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td>协议 (Protocols)</td>\n<td>被 HTTP、HTTPS、FTP、SMTP 和 Telnet 使用</td>\n<td>被 DNS、DHCP、TFTP、SNMP、RIP 和 VoIP 使用</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">互联网是连接设备的网络，每个设备（手机，电脑，服务器等）都通过互联网协议套件（Internet Protocol Suite，IPS）进行通信。TCP 和 UDP 是套件中的主要协议：<a href=\"https://www.sciencedirect.com/topics/computer-science/internet-protocol-suite\" rel=\"nofollow\">图片来源</a></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/16164244/154881828-203089a7-2df1-48af-855b-0a24602acf8e.png\"><img src=\"https://user-images.githubusercontent.com/16164244/154881828-203089a7-2df1-48af-855b-0a24602acf8e.png\" alt=\"protocols\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">每台连接到互联网的设备都有一个唯一的 IP 地址。两台设备进行通信时，可能使用 TCP 或 UDP 来进行。</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/16164244/154935179-287b9ac3-3c3a-4340-936d-e3ce7c8f424b.png\"><img src=\"https://user-images.githubusercontent.com/16164244/154935179-287b9ac3-3c3a-4340-936d-e3ce7c8f424b.png\" alt=\"tcp vs udp\" style=\"max-width: 100%;\"></a></p>\n<hr>\n<h2 dir=\"auto\">参考资料</h2>\n<ul dir=\"auto\">\n<li><a href=\"https://www.reddit.com/r/ProgrammerHumor/comments/9gcwgw/tcp_vs_udp/\" rel=\"nofollow\">TCP vs. UDP</a></li>\n<li><a href=\"https://www.khanacademy.org/computing/computers-and-internet/xcae6f4a7ff015e7d:the-internet/xcae6f4a7ff015e7d:transporting-packets/a/transmission-control-protocol--tcp\" rel=\"nofollow\">Transmission Control Protocol (TCP)</a></li>\n<li><a href=\"https://zh.wikipedia.org/wiki/%E7%94%A8%E6%88%B7%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%8D%8F%E8%AE%AE\" rel=\"nofollow\">wiki 用户数据报协议</a></li>\n<li><a href=\"https://zh.wikipedia.org/wiki/%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE\" rel=\"nofollow\">wiki 传输控制协议</a></li>\n</ul>","updatedAt":"2022-06-17T02:21:23Z","upvoteCount":2,"author":{"login":"lencx","avatarUrl":"https://avatars.githubusercontent.com/u/16164244?u=77d1d01930d8e36105a49a6c474abf70eeee74b1&v=4","url":"https://github.com/lencx"},"category":{"isAnswerable":false,"name":"CS","emoji":":computer:"},"labels":{"edges":[{"node":{"name":"Blog","color":"222222"}}]},"comments":{"edges":[]}}},"pageContext":{"number":6,"previous":{"title":"Awesome Vue","number":34},"next":{"title":"Where ‘this’ executes？","number":3}}},"staticQueryHashes":["3993188973"]}