{"componentChunkName":"component---src-templates-issues-tsx","path":"/issues/45","result":{"data":{"site":{"siteMetadata":{"repo":"https://github.com/lencx/dev"}},"issuesJson":{"id":"57897230-1c3a-58e2-ad5b-eca4112c7515","title":"react-router 中的 <Link> 标签与 <a> 标签的区别是什么？","number":45,"bodyHTML":"<p dir=\"auto\">本质也是 <code class=\"notranslate\">&lt;a&gt;</code> 标签，只不过在 <code class=\"notranslate\">&lt;Link&gt;</code> 中禁用了 <code class=\"notranslate\">&lt;a&gt;</code> 标签的默认事件，改用了 <code class=\"notranslate\">history</code> 对象提供的方法进行跳转。区别是：</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">&lt;Link&gt;</code> 是 <code class=\"notranslate\">react-router</code> 中实现的路由跳转链接，一般配合 <code class=\"notranslate\">&lt;Router&gt;</code> 使用，<code class=\"notranslate\">react-router</code> 接管了其默认的链接跳转行为，区别于传统的页面跳转，<code class=\"notranslate\">&lt;Link&gt;</code> 的“跳转”行为只会触发相匹配的 <code class=\"notranslate\">&lt;Route&gt;</code> 对应的页面内容更新，而不会刷新整个页面。\n<ul dir=\"auto\">\n<li>有 <code class=\"notranslate\">onClick</code> 则执行 <code class=\"notranslate\">onClick</code></li>\n<li><code class=\"notranslate\">click</code> 时阻止 <code class=\"notranslate\">&lt;a&gt;</code> 标签默认事件（点击 <code class=\"notranslate\">&lt;a href=\"/abc\"&gt;test&lt;/a&gt;</code> 就不会跳转和刷新页面）</li>\n<li>再取得跳转 <code class=\"notranslate\">href</code>（即是 <code class=\"notranslate\">to</code>），用 <code class=\"notranslate\">history</code>（前端路由两种方式之一，<code class=\"notranslate\">history</code> &amp; <code class=\"notranslate\">hash</code>）跳转，此时只是链接变了，并没有刷新页面</li>\n</ul>\n</li>\n<li><code class=\"notranslate\">&lt;a&gt;</code> 标签就是普通的超链接，用于从当前页面跳转到 <code class=\"notranslate\">href</code> 指向的另一个页面（非锚点情况）</li>\n</ul>\n<hr>\n<ul dir=\"auto\">\n<li><a href=\"https://stackoverflow.com/questions/43087007/react-link-vs-a-tag-and-arrow-function\" rel=\"nofollow\">react link vs a tag and arrow function</a></li>\n<li><a href=\"https://github.com/ReactTraining/react-router/issues/1982\" data-hovercard-type=\"issue\" data-hovercard-url=\"/remix-run/react-router/issues/1982/hovercard\">how to reload a route?</a></li>\n<li><a href=\"https://blog.usejournal.com/make-different-html-tags-behave-as-a-react-router-link-81b09c9edc6d\" rel=\"nofollow\">Make different HTML tags behave as a react-router Link</a></li>\n</ul>","updatedAt":"2022-06-15T09:51:54Z","upvoteCount":1,"author":{"login":"lencx","avatarUrl":"https://avatars.githubusercontent.com/u/16164244?u=77d1d01930d8e36105a49a6c474abf70eeee74b1&v=4","url":"https://github.com/lencx"},"category":{"isAnswerable":false,"name":"Web","emoji":":globe_with_meridians:"},"labels":{"edges":[{"node":{"name":"React","color":"61dafb"}},{"node":{"name":"Interview","color":"662E4E"}}]},"comments":{"edges":[]}}},"pageContext":{"number":45,"previous":{"title":"js 中 apply & bind & call 区别","number":49},"next":{"title":"为什么不要在循环，条件或嵌套函数中调用 Hook","number":44}}},"staticQueryHashes":["3993188973"]}