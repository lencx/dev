{"version":3,"file":"component---src-templates-category-tsx-975dbc49182f568ca711.js","mappings":"sJAEMA,EAAmC,CACvCC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,KAAM,IACNC,KAAM,KACNC,KAAM,KACNC,MAAO,KACPC,KAAM,KACNC,KAAM,KACNC,OAAQ,KACRC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,SAAU,KACVC,UAAW,KACXC,WAAY,KACZC,YAAa,KACbC,aAAc,KACdC,aAAc,KACdC,eAAgB,KAChBC,eAAgB,KAChBC,kBAAmB,MACnBC,qBAAsB,KACtBC,eAAgB,KAChBC,SAAU,KACVC,gBAAiB,KACjBC,KAAM,KACNC,UAAW,KACXC,MAAO,KACPC,KAAM,KACNC,UAAW,KACXC,MAAO,KACPC,SAAU,M,SCZZ,EAZoC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAC3C,OACEC,EAAAA,cAACC,EAAAA,KAAD,CACEC,UAAU,cACVC,GAAIJ,GAAE,cAAqBK,EAAAA,EAAAA,IAAON,EAAKO,MAAM,GAC7CC,OAAQP,EAAK,SAAW,SDsB9B,SAAgBQ,GAAD,OAA2B7C,EAAS6C,EAAMC,MAAM,GAAI,KAAO,EAA1E,CCpBOC,CAASX,EAAKS,OALjB,IAK0BT,EAAKO,KAPnC,C,yDCoBA,IArBwC,SAACK,GACvC,IAAMZ,EAAOY,EAAMZ,KAAKa,mBAAmBC,MACrCC,EAAOH,EAAMI,YAAYD,KACzBE,EAAOL,EAAMZ,KAAKkB,KAAKC,aAAaF,KAE1C,OACEf,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,eACZJ,EAAKoB,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,KACX,OACEnB,EAAAA,cAAAA,MAAAA,CAAKoB,IAAKD,EAAKE,OAAQnB,UAAU,eAC/BF,EAAAA,cAACsB,EAAAA,EAAD,CAAWP,KAAMA,EAAMM,OAAQF,EAAKE,OAAQE,IAAKV,IACjDb,EAAAA,cAACC,EAAAA,KAAD,CAAMC,UAAU,QAAQC,GAAE,WAAagB,EAAKE,QACzCF,EAAKK,OALb,IAPP,C,8CCSA,IATsC,SAACd,GACrC,IAAMe,EAAgBf,EAAMK,KAAZ,gBAAgCL,EAAMW,OACtD,OACErB,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,oBAAoBwB,KAAMD,EAAYnB,OAAO,UACvDI,EAAMa,KAAMI,EAAAA,EAAAA,IAAUjB,EAAMW,OAAQX,EAAMa,KAA1Cb,IAAqDA,EAAMW,OAJlE,C,yHCHe,SAASO,EAAalB,GACnC,IAAMmB,EAAenB,EAAMI,YAAYgB,SAEjCC,EADOrB,EAAMZ,KAAKkB,KAAKC,aAAaF,KACtB,4BAAqCX,EAAAA,EAAAA,IACvDyB,EAAaxB,MACb,GAGF,OACEL,EAAAA,cAACgC,EAAAA,EAAD,CAAQ9B,UAAU,gBAAgBsB,MAAUK,EAAaxB,KAAlB,eACrCL,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,iBACbF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,gBAAgBsB,MAAOO,GACpC/B,EAAAA,cAACiC,EAAAA,EAAD,CAAUnC,KAAM+B,EAAc9B,GAAIgC,IAClC/B,EAAAA,cAAAA,OAAAA,CAAME,UAAU,QAAQ2B,EAAaK,cAGvClC,EAAAA,cAACmC,EAAAA,EAAD,CAAYrC,KAAMY,EAAMZ,KAAMgB,YAAaJ,EAAMI,eAIxD,C","sources":["webpack://dev/./src/utils/emoji.ts","webpack://dev/./src/components/category/index.tsx","webpack://dev/./src/components/issues_list/index.tsx","webpack://dev/./src/components/issues_num/index.tsx","webpack://dev/./src/templates/category.tsx"],"sourcesContent":["// https://github.com/ikatyang/emoji-cheat-sheet/blob/master/README.md\n\nconst emojiMap: Record<string, string> = {\n  zap: '⚡',\n  gear: '⚙️',\n  beer: '🍺',\n  star: '⭐',\n  fire: '🔥',\n  tada: '🎉',\n  ninja: '🥷',\n  mega: '📣',\n  crab: '🦀',\n  rocket: '🚀',\n  warning: '⚠️',\n  unicorn: '🦄',\n  lobster: '🦞',\n  cyclone: '🌀',\n  rainbow: '🌈',\n  computer: '💻',\n  nail_care: '💅',\n  sunglasses: '😎',\n  see_no_evil: '🙈',\n  crystal_ball: '🔮',\n  monocle_face: '🧐',\n  speech_balloon: '💬',\n  exploding_head: '🤯',\n  hammer_and_wrench: '🛠️',\n  globe_with_meridians: '🌐',\n  page_facing_up: '📄',\n  thinking: '🤔',\n  sparkling_heart: '💖',\n  boom: '💥',\n  collision: '💥',\n  anger: '💢',\n  book: '📖',\n  open_book: '📖',\n  books: '📚',\n  game_die: '🎲'\n}\n\nexport default (emoji: string): string => emojiMap[emoji.slice(1, -1)] || '';","import React, { FC } from 'react';\nimport { Link } from 'gatsby';\n\nimport getEmoji from '@utils/emoji';\nimport { fmtURI } from '@utils/tools';\n\nimport './index.scss';\n\ninterface CategoryProps {\n  data: any;\n  go?: string;\n}\n\nconst Category: FC<CategoryProps> = ({ data, go }) => {\n  return (\n    <Link\n      className=\"gg-category\"\n      to={go ? go : `/category/${fmtURI(data.name, true)}`}\n      target={go ? '_blank' : '_self'}\n    >\n      {getEmoji(data.emoji)} {data.name}\n    </Link>\n  );\n};\n\nexport default Category;\n","import React, { FC } from 'react';\nimport { Link } from 'gatsby';\n\nimport IssuesNum from '@comps/issues_num';\n\nimport './index.scss';\n\ninterface IssuesListProps {\n  data: any;\n  pageContext: any;\n}\n\nconst IssuesList: FC<IssuesListProps> = (props) => {\n  const data = props.data.allDiscussionsJson.nodes;\n  const nlen = props.pageContext.nlen;\n  const repo = props.data.site.siteMetadata.repo;\n\n  return (\n    <div className=\"issues-list\">\n      {data.map(({ node }: any) => {\n        return (\n          <div key={node.number} className=\"issues-item\">\n            <IssuesNum repo={repo} number={node.number} len={nlen} />\n            <Link className=\"title\" to={`/issues/${node.number}`}>\n              {node.title}\n            </Link>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default IssuesList;\n","import React, { FC } from 'react';\n\nimport { go, fmtIssues } from '@utils/tools';\n\nimport './index.scss';\n\ninterface IssuesNumProps {\n  repo: string;\n  number: number;\n  len?: number;\n}\n\nconst IssuesNum: FC<IssuesNumProps> = (props) => {\n  const issuesLink = `${props.repo}/discussions/${props.number}`;\n  return (\n    <a className=\"number issues-num\" href={issuesLink} target=\"_blank\">\n      {props.len ? fmtIssues(props.number, props.len) : `#${props.number}`}\n    </a>\n  );\n};\n\nexport default IssuesNum;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '@layouts/base';\nimport IssuesList from '@comps/issues_list';\nimport Category from '@comps/category';\nimport { fmtURI } from '@utils/tools';\nimport '@styles/category.scss';\n\nexport default function BlogCategory(props: any) {\n  const categoryInfo = props.pageContext.category;\n  const repo = props.data.site.siteMetadata.repo;\n  const categoriesLink = `${repo}/discussions/categories/${fmtURI(\n    categoryInfo.name,\n    true\n  )}`;\n\n  return (\n    <Layout className=\"category-page\" title={`${categoryInfo.name} | Category`}>\n      <div className=\"markdown-body\">\n        <div className=\"category-head\" title={categoriesLink}>\n          <Category data={categoryInfo} go={categoriesLink} />\n          <span className=\"desc\">{categoryInfo.description}</span>\n        </div>\n\n        <IssuesList data={props.data} pageContext={props.pageContext} />\n      </div>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query DevCategoryQuery($name: String!) {\n    site {\n      siteMetadata {\n        repo\n      }\n    }\n    allDiscussionsJson(\n      filter: { node: { category: { name: { eq: $name } } } }\n    ) {\n      nodes {\n        node {\n          title\n          number\n        }\n      }\n    }\n  }\n`;\n"],"names":["emojiMap","zap","gear","beer","star","fire","tada","ninja","mega","crab","rocket","warning","unicorn","lobster","cyclone","rainbow","computer","nail_care","sunglasses","see_no_evil","crystal_ball","monocle_face","speech_balloon","exploding_head","hammer_and_wrench","globe_with_meridians","page_facing_up","thinking","sparkling_heart","boom","collision","anger","book","open_book","books","game_die","data","go","React","Link","className","to","fmtURI","name","target","emoji","slice","getEmoji","props","allDiscussionsJson","nodes","nlen","pageContext","repo","site","siteMetadata","map","node","key","number","IssuesNum","len","title","issuesLink","href","fmtIssues","BlogCategory","categoryInfo","category","categoriesLink","Layout","Category","description","IssuesList"],"sourceRoot":""}